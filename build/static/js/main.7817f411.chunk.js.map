{"version":3,"sources":["Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.module.css","img/labsLogo.png","Components/lib/CustomNavbar/index.js","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ListPage/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/CustomBreadcrumb/index.js","Components/lib/CustomFooter/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","Components/Projects/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/CustomAlert/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","Components/lib/custom-navbar-links.js","Components/Transcripts/TranscriptCorrect.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/select-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Word.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/css-color-names.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelForm.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelModal.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEdits/PaperEdit/Transcripts/get-user-selection.js","Components/PaperEdits/PaperEdit/Transcripts/Transcript.js","Components/PaperEdits/PaperEdit/Transcripts/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextViewer.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextControls.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/index.js","Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js","Components/PaperEdits/PaperEdit/ProgramScript/get-data-from-user-selection.js","Components/PaperEdits/PaperEdit/ProgramScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEdits/PaperEdit/ProgramScript/index.js","Components/PaperEdits/PaperEdit/index.js","App.js","serviceWorker.js","index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextProgressBar.module.css","Util/which-js-env/index.js"],"names":["module","exports","speaker","unselectable","highlightedWord","__webpack_require__","p","CustomNavbar","react_default","a","createElement","Navbar_default","collapseOnSelect","expand","bg","variant","fixed","lib","to","Brand","index_es","icon","faFlask","process","SimpleCard","handleDelete","confirm","_this","props","id","alert","handleEdit","showLinkPath","Card_default","style","width","marginBottom","Body","Row_default","this","cursor","Col_default","xs","sm","md","ld","xl","Title","href","concat","title","Link","Button_default","onClick","size","faPen","faTrash","Subtitle","className","description","Component","List","listItems","items","map","item","display","lib_SimpleCard","key","filter","Fragment","height","overflow","React","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","InputGroup_default","Prepend","Text","faSearch","FormControl_default","onChange","placeholder","aria-label","aria-describedby","Page","results","project","handleUpdateList","searchEl","length","lib_SearchBar","handleShowCreateNewItemForm","block","model","lib_List","ItemForm","handleTitleChange","event","handleDescriptionChange","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","_this2","Form_default","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal_default","Footer","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","modalTitle","lib_ItemForm","CustomBreadcrumb","breadcrumbs","index","link","Breadcrumb_default","Item","name","active","CustomFooter","footer","src","labsLogo","alt","rel","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","data","arguments","undefined","applicationType","mode","body","JSON","stringify","headers","Content-Type","_callee","url","_args","regenerator_default","wrap","_context","prev","next","fetch","abrupt","sent","stop","corsFetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","window","env","API_URL","res","json","projects","getProject","resProject","projectTitle","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","DemoApiWrapper","response","_id","status","ok","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","jsENV","whichJsEnv","src_ApiWrapper","console","log","demoApiWrapper","freeze","apiWrapper","electronWrapper","ElectronWrapper","Projects","handleSaveItem","updateProject","then","findItemById","findIndex","element","isNewItemModalShow","itemId","createProject","toConsumableArray","push","list","handleEditItem","showLinkPathToItem","handleDeleteItem","bind","assertThisInitialized","getAllProjects","result","tmpList","t0","deleteProject","newItemsList","lib_CustomNavbar","Container_default","marginTop","lib_CustomBreadcrumb","ListPage","deleteItem","createNew","editItem","lib_ItemFormModal","lib_CustomFooter","CustomTranscriptCard","borderStatus","Badge_default","showLink","Alert_default","faExclamationTriangle","errorMessage","border","disabled","Spinner_default","as","animation","role","aria-hidden","faCheck","subtitle","ListPageTranscript","itemsCards","content","lib_CustomTranscriptCard","CustomAlert","handleDismiss","onClose","dismissible","heading","Heading","message","TranscriptForm","handleFileUpload","file","Array","from","files","FormData","append","path","mediaFileSelected","sendRequest","uploading","get","createTranscript","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","lib_CustomAlert","dismissable","error","accept","NewTranscriptFormModal","Transcripts_TranscriptForm","Transcripts","componentWillUnmount","interval","clearInterval","asyncToGenerator","mark","areThereTranscriptsInProgress","newItem","newitems","handleSaveEditedItem","newEditedItem","itemIdex","updateTranscript","isEditItemModalShow","handleCloseModalEdit","isServerError","setInterval","deleteTranscript","findId","tmpNewList","lib_ListPageTranscript","faFileAlt","Transcripts_NewTranscriptFormModal","PaperEdits","updatePaperEdit","createPaperEdit","getAllPaperEdits","deletePaperEdit","Project","context","match","params","projectName","Tabs_default","activeKey","onSelect","Tab_default","eventKey","Components_Transcripts","Components_PaperEdits","navbarLinks","faFolderOpen","faFolderPlus","faFile","faTasks","faCut","faUsers","TranscriptCorrect","componentDidMount","transcriptJson","saveToServer","transcriptEditorRef","current","getEditorContent","redirectToAnnotatePage","renderRedirect","Redirect","createRef","fluid","links","react_transcript_editor","transcriptData","mediaUrl","isEditable","sttJsonType","ref","colourStyles","control","styles","objectSpread","backgroundColor","option","_ref","isDisabled","tmpColor","isFocused","isSelected","color","borderLeft","borderColor","multiValue","_ref2","multiValueLabel","_ref3","multiValueRemove","_ref4","speakersColorStyles","handleToggleSearchTextPreferences","showTextSearchPreferences","handleToggleSearchLabelsPreferences","showLabelsSearchPreferences","handleToggleSearchSpeakersPreferences","showSpeakersSearchPreferences","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleToggleAll","handleHideAll","DropdownButton_default","drop","InputGroup","Append","faFilter","Dropdown_default","faTag","faUser","faAlignJustify","Divider","react_select_esm","isMulti","isSearchable","options","labelsOptions","speakersOptions","Check","checked","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","text","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","addWordsToSpeakersParagraphs","findAnnotationInParagraph","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","data-paragraph-text","paragraphTextWithoutPunctuation","lg","speakerName","toUpperCase","shortTimecode","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","i","dec","Math","floor","_this$props","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger_default","rootClose","trigger","placement","overlay","Popover_default","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","wordEl","Paragraphs_Word","Paragraphs_AnnotationOverlayTrigger","note","Paragraphs_Paragraph","csscolors","yellow","greenyellow","deepskyblue","deeppink","aqua","black","blueviolet","brown","burlywood","cadetblue","chocolate","coral","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","blue","dimgray","dimgrey","dodgerblue","firebrick","forestgreen","fuchsia","gainsboro","goldenrod","gold","gray","green","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","chartreuse","limegreen","linen","magenta","maroon","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","yellowgreen","aquamarine","mediumaquamarine","colorNamesList","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","handleSave","onLabelSaved","defaultValue","onInput","rows","faSyncAlt","react_color_lib","triangle","onChangeComplete","colors","LabelModal","handleShow","openBtn","LabelsList_LabelForm","LabelsList","removeLabel","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup_default","LabelsList_LabelModal","faTimes","labelsList","overflowY","overflowX","isLabelsListOpen","faTags","faCog","onlyCallOnce","cb","duration","timer","args","clearTimeout","setTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","has","set","err","return","Transcript","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","currentTime","play","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","parse","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","showLabelsReference","getCurrentWordTime","currentWordTime","time","round","highlights","scoped","onTimeUpdate","controls","ButtonGroup_default","ButtonGroup","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","Transcripts_LabelsList","Transcripts_SearchBar","onDoubleClick","Transcripts_Paragraphs","transcriptsElNav","Nav_default","faClock","transcriptsElTab","Pane","Transcripts_Transcript","Container","defaultActiveKey","Content","PaperCutsPlayerViewer","_props$width","_props$height","_props$playlist","playlist","loadPlaylist","sourceStart","node","videoContext","startAt","stopAt","connect","destination","canvasRef","canvas","VideoContext","PureComponent","VideoContextProgressBar","updateProgress","requestAnimationFrame","progress","handleClick","offsetX","nativeEvent","getTracks","_sourceNodes","reverse","startTime","stopTime","elementURL","slice","pop","pointerEvents","papercutsPlayerProgressTrackBuffer","papercutsPlayerProgressTrack","tracks","papercutsPlayerProgress","papercutsPlayerProgressBack","papercutsPlayerProgressFront","playIcon","faPlay","pauseIcon","faPause","stopIcon","faStop","Controls","handlePlay","isPlaying","handlePause","pause","handleStop","PreviewCanvas","videoContextRef","forceUpdate","VideoContextViewer","PreviewCanvas_VideoContextProgressBar","VideoContextControls","VoiceOver","faMicrophoneAlt","PaperCut","w","userSelect","TitleHeading","Note","InsertPoint","faArrowAltCircleRight","DragHandle","sortableHandle","faGripLines","SortableItem","sortableElement","faArrowAltCircleLeft","SortableContainer","sortableContainer","children","listStyle","ProgrammeScript","onSortEnd","oldIndex","newIndex","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","ProgramScript_TitleHeading","ProgramScript_VoiceOver","ProgramScript_PaperCut","ProgramScript_Note","ProgrammeScript_InsertPoint","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement","parseWordElDataset","innerText","getDataFromUserWordsSelection","isOneParagraph","firstword","divideWordsSelectionsIntoParagraphs","previousWordSpeaker","currentParagraph","paragraphsResult","defaultReelName","defaultFps","defaultTimecodeOffset","defaultSampleRate","ProgramScript","elements","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","cuid","insertPointElement","handleAddTranscriptSelectionToProgrammeScript","getSequenceJsonEDL","_edlSq$events","edlSq","events","programmeScriptPaperCutsWithId","currentTranscript","endTime","reelName","metadata","clipName","fps","offset","timecode","sampleRate","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","firstElement","generateADL","projectOriginator","edits","frameRate","handleExportFCPX","jsonToFCPX","getProgrammeScriptJson","_edlSq$events2","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleExportTxt","handleUpdatePreview","timelineStartTime","resetPreview","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","ProgramScript_PreviewCanvas","noGutters","faPlus","faHeading","faSync","faShare","faInfoCircle","faSave","ProgramScript_ProgrammeScript","PaperEdit","get_ProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","faAngleDown","faAngleUp","span","PaperEdit_Transcripts","PaperEdit_ProgramScript","NoMatch","App","offlineWarning","navigator","onLine","HashRouter","Switch","Route","exact","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister","__dirname","versions","electron","cep","chdir"],"mappings":"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","file":"static/js/main.7817f411.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__1kdz6\",\"unselectable\":\"Paragraphs_unselectable__3k2Ob\",\"highlightedWord\":\"Paragraphs_highlightedWord__3mJtY\"};","module.exports = __webpack_public_path__ + \"static/media/labsLogo.658ac9e3.png\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomNavbar () {\n\n  return (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"top\"\n    >\n      <LinkContainer to=\"/projects\">\n        <Navbar.Brand>\n          <FontAwesomeIcon icon={ faFlask } />\n          {'  '}{process.env.REACT_APP_NAME}\n        </Navbar.Brand>\n      </LinkContainer>\n    </Navbar>\n  );\n}\n\nexport default CustomNavbar;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <Card style={ { width: '100%', marginBottom: '1em' } }>\n        <Card.Body>\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                  <a href={ `#${ this.showLinkPath() }` } >\n                    {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <section style={ { height: '75vh', overflow: 'scroll' } }>\n        {listItems}\n      </section>\n    </>\n    );\n  }\n}\n\nexport default List;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport labsLogo from '../../../img/labsLogo.png';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <small>\n        <img src={ labsLogo } style={ { height: '2em' } } alt=\"Labs Logo\" /> This is\n        a prototype from{' '}\n        <a href=\"http://bbcnewslabs.co.uk/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          BBC News Labs\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default ( () => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n})();\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomNavbar from '../lib/CustomNavbar';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n  async componentDidMount () {\n    try {\n    // TODO: do we need to add user id in request?\n      const result = await ApiWrapper.getAllProjects();\n\n      if (result) {\n      // add a display property for component cards search\n        const tmpList = result.map(project => {\n          project.display = true;\n\n          return project;\n        });\n        this.setState({ items: tmpList });\n      }\n    } catch (e) {\n      console.log('Error with ApiWrapper.getAllProjects', e);\n    }\n    // TODO: some error handling\n  };\n\n  // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createProject(item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const projects = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newProject = response.project;\n          newProject.display = true;\n          projects.push(response.project);\n          this.setState({\n            isNewItemModalShow: false,\n            items: projects,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updateProject(item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const project = response.project;\n          // need to add display true attribute for search to the new project\n          project.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          this.findItemById(items, item);\n          const projectIndex = this.state.items.findIndex(element => element.id === project.id);\n          items[projectIndex] = project;\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n    console.log('edit item', item);\n  }\n\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deleteProject(itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (<>\n      <CustomNavbar/>\n      <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb items={ [\n              {\n                name: 'Projects'\n              }\n            ] } />\n          </Col>\n        </Row>\n        <ListPage\n          model={ 'Project' }\n          items={ this.state.items }\n          handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n          deleteItem={ this.createNew }\n          editItem={ this.createNew }\n          handleEdit={ this.handleEditItem }\n          handleDelete={ this.handleDeleteItem }\n          showLinkPath={ this.showLinkPathToItem }\n          handleUpdateList={ this.handleUpdateList }\n        />\n        <ItemFormModal\n          title={ this.state.title }\n          description={ this.state.description }\n          id={ this.state.itemId }\n          modalTitle={ this.state.itemId ? 'Edit Project' : 'New Project' }\n          show={ this.state.isNewItemModalShow }\n          handleCloseModal={ this.handleCloseModal }\n          handleSaveForm={ this.handleSaveItem }\n        />\n      </Container>\n      <CustomFooter/>\n    </>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faCheck,\n  faExclamationTriangle,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let description;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      description = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      description = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={ `#${ this.props.showLink() }` }> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      description = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={ faExclamationTriangle } />{' '}\n            {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <Card\n        border={ borderStatus }\n        style={ { width: '100%', marginBottom: '2em' } }\n      >\n        <Card.Body>\n          <Row>\n            <Col xs={ 12 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n              <Card.Title>\n                {this.props.icon ? this.props.icon : ''} {title}\n              </Card.Title>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              {status && status === 'info' ? (\n                <Button variant=\"info\" size=\"sm\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'danger' ? (\n                <Button variant=\"danger\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faExclamationTriangle } />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'success' ? (\n                <Button variant=\"success\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faCheck } />\n                </Button>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {this.props.subtitle}\n              </Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              {description}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\n\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <section style={ { height: '75vh', overflow: 'scroll' } }>\n            {itemsCards}\n          </section>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n            {searchEl}\n          </Col>\n          <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n          </Col>\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/#dismissing\nclass CustomAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleDismiss = () => this.setState({ show: false });\n\n  render() {\n    if (this.state.show) {\n      return (\n        <Alert\n          variant={ this.props.variant }\n          onClose={ this.handleDismiss }\n          dismissible\n        >\n          {this.props.heading ? (\n            <Alert.Heading>{this.props.heading}</Alert.Heading>\n          ) : (\n            ''\n          )}\n          {this.props.message}\n        </Alert>\n      );\n    } else {\n      return (\n        <>\n          <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default CustomAlert;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    console.log(\"formData.get('path')\", formData.get('path'));\n\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n        Select an audio or video file to upload\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n        Please chose a audio or video file to upload\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n      this.getTranscripts();\n      // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly, \n      // and only if there are items in progress in the list, it checks the backed for updates\n      this.interval = setInterval(() => {\n        console.log('Running interval to check for transcripts');\n        if(this.areThereTranscriptsInProgress(this.state.items)){\n            console.log('interval: checking transcirpt update');\n            this.getTranscripts();\n        }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount =() => {\n    if (this.interval) {\n       clearInterval(this.interval);\n    }\n  }\n\n  getTranscripts = async () =>{\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n      // TODO: add error handling\n      if (result) {\n        const tmpList = result.transcripts.map((item) => {\n          item.display = true;\n\n          return item;\n        });\n        this.setState({\n          projectTitle: result.projectTitle,\n          items: tmpList\n        }, () => {\n          console.log('getTranscripts-tmpList');\n        });\n      }\n  }\n\n  areThereTranscriptsInProgress = (items) => {\n    if (items.length !== 0) {\n      const result = items.find((transcript) => {\n\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  }\n\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState');\n    });\n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      }, () => {\n        console.log('deleted')\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    console.log('ApiWrapper.getAllPaperEdits', result);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomNavbar from '../lib/CustomNavbar';\nimport CustomFooter from '../lib/CustomFooter';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name'\n    };\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  };\n\n  render() {\n    return (\n      <>\n        <CustomNavbar/>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <CustomBreadcrumb items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: this.state.projectName\n                }\n              ] } />\n            </Col>\n          </Row>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={ this.state.key }\n            onSelect={ key => this.setState({ key }) }\n          >\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={ this.state.projectId }/>\n            </Tab>\n            <Tab eventKey=\"programmes\" title=\"Programmes script\">\n              <PaperEdits projectId={ this.state.projectId } />\n            </Tab>\n          </Tabs>\n        </Container>\n        <CustomFooter/>\n      </>\n    );\n  }\n}\n\nexport default Project;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFolderOpen,\n  faFolderPlus,\n  faFileAlt,\n  faFile,\n  faTasks,\n  faCut,\n  faUsers\n} from '@fortawesome/free-solid-svg-icons';\n\nconst navbarLinks = projectId => {\n\n  return [\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFolderOpen } /> Projects\n        </span>\n      ),\n      link: '/projects'\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFolderPlus } /> NewProject\n        </span>\n      ),\n      link: '/projects/new'\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFileAlt } /> Transcripts\n        </span>\n      ),\n      link: `/projects/${ projectId }/transcripts`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFile } /> New Transcript\n        </span>\n      ),\n      link: `/projects/${ projectId }/transcripts/new`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faTasks } /> Paper Edits\n        </span>\n      ),\n      link: `/projects/${ projectId }/paperedits`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faCut } /> New Paper Edit\n        </span>\n      ),\n      link: `/projects/${ projectId }/paperedits/new`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faUsers } /> Users\n        </span>\n      ),\n      link: `/projects/${ projectId }/users`\n    }\n  ];\n};\n\nexport default navbarLinks;\n","import React, { Component } from 'react';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor } from '@bbc/react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport CustomNavbar from '../lib/CustomNavbar/index.js';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\n// import CustomFooter from '../lib/CustomFooter/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport navbarLinks from '../lib/custom-navbar-links';\nimport CustomFooter from '../lib/CustomFooter/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url\n        });\n      });\n  }\n\n  saveToServer = () => {\n    // TODO: add Api call to save content of\n    alert('save to server');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in @bbc/react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in bbc/react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('ApiWrapper.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { marginBottom: '5em' } } fluid>\n\n          <CustomNavbar\n            links={ navbarLinks(this.state.projectId) }\n          />\n          <br/>\n\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <CustomBreadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {/* <Row> */}\n          {this.state.transcriptJson !== null &&\n          <TranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            // title={ this.state.projectTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n          />}\n          {/* </Row> */}\n\n          <CustomFooter />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from @bbc/react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@bbc/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' ApiWrapper.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations\n        });\n      });\n  }\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    ApiWrapper.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      ApiWrapper.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    ApiWrapper.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    return (\n      <>\n\n        {/* <div style={ {\n          display:\n          // this.state.isShowLabelsReference ?\n           'block'\n          //  : 'none'\n          ,\n          position: 'absolute',\n          top: '0px',\n          left: '0px',\n          width: '5vw',\n          height: '100vh',\n          backgroundColor: 'black'\n        } }>\n            Test\n        </div> */}\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        {/* // Preview video - HTML5 Video element or  @bbc/react-transcript-editor/VideoPlayer\n        // Media control - HTML5 default or @bbc/react-transcript-editor/MediaPlayer\n        // Search Bar - from TranscriptAnnotate component\n        // Text -  from TranscriptAnnotate component */}\n        <video\n          src={ this.props.url }\n          ref={ this.videoRef }\n          onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n          // onTimeUpdate={ (e) => {console.log(e.target.currentTime); } }\n          style={ {\n            // display: this.state.isVideoTranscriptPreviewShow,\n            width: '100%',\n            height:'10em',\n            backgroundColor: 'black'\n          } }\n          controls/>\n        <Card>\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: '60vh', overflow: 'scroll' } }\n          >\n            <div>\n              {highlights}\n              {this.props.transcript\n          && <Paragraphs\n            labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n            annotations={ this.state.annotations ? this.state.annotations : [] }\n            transcriptJson={ this.props.transcript }\n            searchString={ this.state.searchString ? this.state.searchString : '' }\n            showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n            selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n            selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n            transcriptId={ this.props.transcriptId }\n            handleTimecodeClick={ this.handleTimecodeClick }\n            handleWordClick={ this.handleWordClick }\n            handleDeleteAnnotation={ this.handleDeleteAnnotation }\n            handleEditAnnotation={ this.handleEditAnnotation }\n          />}\n            </div>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ transcript.id }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ transcript.id } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport VideoContext from 'videocontext';\n\nclass PaperCutsPlayerViewer extends React.PureComponent {\n  constructor(props) {\n    const {\n      width = 640,\n      height = 360,\n      playlist = [],\n    } = props;\n\n    super(props);\n\n    this.playlist = playlist;\n    this.canvasRef = React.createRef();\n    this.canvas = (<canvas\n      ref={ this.canvasRef }\n      width={ width }\n      height={ height }\n    />);\n  }\n\n  componentDidMount() {\n    this.videoContext = new VideoContext(\n      this.canvasRef.current,\n      (err) => console.error(\n        'There was problem instantiating the Video Context in Paper Cuts Player Viewer component',\n        err,\n      )\n    );\n    this.loadPlaylist();\n  }\n\n  loadPlaylist = () => {\n    this.playlist.forEach(({ type, sourceStart, start, duration, src }) => {\n      const node = this.videoContext[type](src, sourceStart);\n      node.startAt(start);\n      node.stopAt(start + duration);\n      node.connect(this.videoContext.destination);\n    });\n  }\n\n  render() {\n    return (this.canvas);\n  }\n}\n\nexport default PaperCutsPlayerViewer;\n","/* eslint-disable template-curly-spacing */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styles from './VideoContextProgressBar.module.css';\n\nclass VideoContextProgressBar extends React.PureComponent {\n  constructor(props) {\n    const {\n      width = 640,\n    } = props;\n\n    super(props);\n\n    this.width = width;\n    this.state = { progress: 0 };\n  }\n\n  componentDidUpdate() {\n    this.videoContext = this.props.videoContext;\n    this.setState({ duration: this.videoContext.duration });\n    this.updateProgress();\n  }\n\n  updateProgress = () => requestAnimationFrame(() => {\n    const currentTime = this.videoContext && this.videoContext.currentTime;\n    const progress = (currentTime / this.state.duration) * 100;\n\n    if (this.state.progress !== progress) this.setState({ progress });\n\n    requestAnimationFrame(this.updateProgress);\n  });\n\n  handleClick = ({ nativeEvent: { offsetX } }) => {\n    this.videoContext.currentTime =\n      (offsetX / this.width) * this.state.duration;\n  }\n\n  getTracks = () =>\n    this.state.duration && this.videoContext._sourceNodes.reverse().map(\n      ({ startTime, stopTime, elementURL }, i) => {\n        const marginLeft = (startTime / this.state.duration) * this.width;\n        const width =\n          ((stopTime - startTime) / this.state.duration) * this.width;\n        const key = `${elementURL.split('/').slice(-1).pop()}.${i}`;\n\n        return (\n          <div key={ key } style={ { pointerEvents: 'none' } } >\n            <div className={ styles.papercutsPlayerProgressTrackBuffer } />\n            <div className={ styles.papercutsPlayerProgressTrack }\n              style={ { width, marginLeft } }\n            />\n            <div className={ styles.papercutsPlayerProgressTrackBuffer }/>\n          </div>\n        );\n      });\n\n  render() {\n    if (!this.tracks) this.tracks = this.getTracks();\n\n    return (\n      <>\n        <div\n        // className='papercuts-player-progress papercuts-player-progress-back'\n          className={ [ styles.papercutsPlayerProgress, styles.papercutsPlayerProgressBack ].join(' ') }\n          onClick={ this.handleClick }\n          style={ { width: this.width } }\n        >\n          <div\n          // className='papercuts-player-progess papercuts-player-progress-front'\n            className={ [ styles.papercutsPlayerProgress, styles.papercutsPlayerProgressFront ].join(' ') }\n            style={ { width: `${this.state.progress}%` } }\n          >\n            { this.tracks }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default VideoContextProgressBar;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop } from '@fortawesome/free-solid-svg-icons';\n\nconst playIcon = <FontAwesomeIcon icon={ faPlay } />;\nconst pauseIcon = <FontAwesomeIcon icon={ faPause } />;\nconst stopIcon = <FontAwesomeIcon icon={ faStop } />;\n\nclass Controls extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isPlaying: false\n    };\n  }\n\n  handlePlay = () => {\n    this.props.videoContext.play();\n    this.setState({ isPlaying: true });\n  }\n\n  handlePause = () => {\n    this.props.videoContext.pause();\n    this.setState({ isPlaying: false });\n  }\n\n  handleStop = () => {\n    this.props.videoContext.pause();\n    this.props.videoContext.currentTime = 0;\n    this.setState({ isPlaying: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Col\n          sm={ 6 } md={ 6 } ld={ 6 } xl={ 6 }\n          // className={ 'col-auto' }\n        >\n          <Button\n            size=\"sm\"\n            block\n            variant=\"outline-secondary\"\n            onClick={ this.state.isPlaying ? this.handlePause : this.handlePlay }\n          >\n            { this.state.isPlaying ? pauseIcon : playIcon }\n          </Button>\n        </Col>\n        <Col\n          sm={ 6 } md={ 6 } ld={ 6 } xl={ 6 }\n          // className={ 'col-auto' }\n        >\n          <Button\n            size=\"sm\"\n            block\n            variant=\"outline-secondary\"\n            onClick={ this.handleStop }\n          >\n            { stopIcon }\n          </Button>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Controls;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport VideoContextViewer from './VideoContextViewer';\nimport VideoContextProgressBar from './VideoContextProgressBar';\nimport VideoContextControls from './VideoContextControls';\nimport Row from 'react-bootstrap/Row';\n\nclass PreviewCanvas extends React.PureComponent {\n\n  constructor(props) {\n    const { playlist = [], width = 640 } = props;\n\n    super(props);\n\n    this.width = width;\n    this.height = (9 / 16) * this.width;\n\n    this.playlist = playlist;\n    this.videoContextRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.videoContext =\n      this.videoContextRef\n      && this.videoContextRef.current\n      && this.videoContextRef.current.videoContext;\n\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <>\n        <Row\n          className={ 'justify-content-center' }\n          style={ { backgroundColor: 'black' } }\n        >\n          <VideoContextViewer\n            ref={ this.videoContextRef }\n            playlist={ this.playlist }\n            width={ this.width }\n            height={ this.height }\n          />\n        </Row>\n        <Row\n          className={ 'justify-content-center' }\n          style={ { backgroundColor: 'lightgrey' } }\n        >\n          <VideoContextProgressBar\n            width={ this.width }\n            videoContext={ this.videoContext && this.videoContext }\n          />\n        </Row>\n        <Row\n          // noGutters\n          // className={ 'justify-content-center' }\n          style={\n            {\n              marginTop: '0.4em'\n            }\n          }\n        >\n          <VideoContextControls\n            videoContext={ this.videoContext && this.videoContext }\n          />\n        </Row>\n      </>\n    );\n  }\n};\n\nexport default PreviewCanvas;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w, index) => {return (\n        // eslint-disable-next-line react/jsx-key\n        <span\n          // TODO: add w.id to words to us as index?\n          key={ w.start + index }\n          className=\"words\"\n          title={ `stat: ${ w.start }- end: ${ w.end }` }\n          data-start={ w.start }\n          data-end={ w.end }\n        >{w.text} </span>);});\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\n\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: 'white' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\nconst SortableItem = sortableElement(({ value, index, type, handleDelete, handleEdit }) => {\n  return (<li>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faPen } onClick={ () => { handleEdit(index); } } /> : null}\n\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n        {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faTrash } onClick={ () => {handleDelete(index);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    // this.setState(({ items }) => ({\n    //   items:\n    // })\n    // );\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    console.log(result);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => (\n          <SortableItem\n            key={ `item-${ index }` }\n            index={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n          />\n        ))}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport cuid from 'cuid';\nimport Tab from 'react-bootstrap/Tab';\nimport PreviewCanvas from './PreviewCanvas/index.js';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@bbc/aes31-adl-composer';\nimport jsonToFCPX from '@bbc/fcpx-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScript from './ProgrammeScript.js';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs/index.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\n\nclass ProgramScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript\n        }\n        // TODO: figure out how to update preview\n        // , () => {\n        //   this.handleUpdatePreview();\n        // }\n        );\n      });\n\n  }\n\n  // TODO: save to server\n  handleProgrammeScriptOrderChange = (list) => {\n    console.log('handleProgrammeScriptOrderChange', list);\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDeleteProgrammeScriptElement = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    console.log(i);\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  handleEditProgrammeScriptElement = (i) => {\n    console.log(i);\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    console.log(newText);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      console.log(text);\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert-point';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    console.log('getDataFromUserWordsSelection::', result);\n    if (result) {\n      console.log(JSON.stringify(result, null, 2));\n\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    // const result = generateADL(edlSq);\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: firstElement.fps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          ...element,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log(edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text;}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleUpdatePreview = () => {\n    let timelineStartTime = 0;\n    //  const { playlist } = this.state;\n    // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n    const playlist = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n        const duration = element.end - element.start;\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const result = {\n          type:'video',\n          start: timelineStartTime,\n          sourceStart: element.start,\n          duration: duration,\n          src: currentTranscript.url\n        };\n\n        timelineStartTime += duration;\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n\n    // Workaround to mound and unmoun the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      console.log('handleUpdatePreview', playlist);\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    console.log('handleUpdatePreview', playlist);\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  render() {\n    return (\n      <Tab.Content>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {/* Programme:  */}\n          {/* <small> */}\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n          {/* </small> */}\n        </h2>\n        {/* <hr/> */}\n        { !this.state.resetPreview ?\n          <PreviewCanvas playlist={ this.state.playlist } width={ '300' }/>\n          : null }\n        <br/>\n\n        <Row noGutters>\n          <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button\n              // block\n              variant=\"outline-secondary\"\n              onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n              title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n            >\n              <FontAwesomeIcon icon={ faPlus } /> Selection\n            </Button>\n          </Col>\n          <Col sm={ 12 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"outline-secondary\">\n                <FontAwesomeIcon icon={ faPlus } />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                  title=\"Add a title header element to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faHeading } /> Heading\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                  title=\"Add a title voice over element to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                  title=\"Add a note element to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faStickyNote } /> Note\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button variant=\"outline-secondary\"\n              onClick={ this.handleUpdatePreview }\n              // size=\"sm\"\n              title=\"update preview\"\n              // block\n            >\n              <FontAwesomeIcon icon={ faSync } /> Preview\n            </Button>\n          </Col>\n          <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"outline-secondary\">\n                <FontAwesomeIcon icon={ faShare } /> Export\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={ this.handleExportEDL }\n                  title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ this.handleExportADL }\n                  title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                >\n                  {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ this.handleExportFCPX }\n                  title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  onClick={ this.handleExportTxt }\n                  title=\"export Text, export the programme script as a text version\"\n                >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ () => {alert('export word doc not implemented yet');} }\n                  title=\"export docx, export the programme script as a word document\"\n                >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  onClick={ this.handleExportJson }\n                  title=\"export Json, export the programme script as a json file\"\n                >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col sm={ 12 } md={ 1 } ld={ 1 } xl={ 1 }>\n            <Button variant=\"outline-secondary\"\n              onClick={ this.handleSaveProgrammeScript }\n              // size=\"sm\"\n              title=\"save programme script\"\n              block\n            >\n              <FontAwesomeIcon icon={ faSave } />\n              {/* Save */}\n            </Button>\n          </Col>\n        </Row>\n        <hr/>\n        <article\n          style={ { height: '60vh', overflow: 'scroll' } }\n          onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n        >\n          { this.state.programmeScript ? <ProgrammeScript\n            programmeScriptElements={ this.state.programmeScript.elements }\n            handleProgrammeScriptOrderChange={ this.handleProgrammeScriptOrderChange }\n            handleDeleteProgrammeScriptElement={ this.handleDeleteProgrammeScriptElement }\n            handleEditProgrammeScriptElement={ this.handleEditProgrammeScriptElement }\n\n          />\n            : null }\n        </article>\n      </Tab.Content>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport CustomNavbar from '../../lib/CustomNavbar/index.js';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\nimport navbarLinks from '../../lib/custom-navbar-links';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgramScript from './ProgramScript/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n\nclass PaperEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n    };\n  }\n\n  componentDidMount = async () => {\n\n    ApiWrapper.get_ProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <CustomNavbar\n          links={ navbarLinks(this.state.projectId) }\n        />\n        <br/>\n\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n          {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n            </Button>\n          </Col> */}\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgramScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n              />\n            </Col>\n          </Row>\n        </Container>\n        <CustomFooter />\n      </Container>\n    );\n  }\n}\n\nexport default PaperEdit;\n","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap-css-only/css/bootstrap.css';\nimport Projects from './Components/Projects/index.js';\nimport Project from './Components/Projects/Project.js';\nimport TranscriptCorrect from './Components/Transcripts/TranscriptCorrect.js';\nimport PaperEdit from './Components/PaperEdits/PaperEdit';\nimport CustomAlert from './Components/lib/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nimport './App.css';\n\nconst demoWarningMessage = (<><p> This is a demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n>see project Github repository for more info</Alert.Link>. </p><p>This is a read-only demo you can only play around with existing projects!</p></>);\n\n\nconst NoMatch = () =>{\n  return <h1>There was an error loading the page you requested</h1>\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transcriptJson: null\n    };\n  }\n  // TODO: remove unused rootes\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    let envWarning = null;\n    let offlineWarning = null;\n\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      envWarning = (\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Demo mode' }\n            message={ demoWarningMessage }/>\n        </Container>);\n    }\n\n    if (!navigator.onLine) {\n      offlineWarning = <><br/><Container><p className={ 'text-warning' }>Offline warning, You don't seem to be connected to the internet </p></Container></>;\n    }\n\n    return (<>\n\n      {envWarning}\n\n      {offlineWarning}\n\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Projects } />\n          <Route exact path=\"/projects\" component={ Projects } />\n          <Route exact path=\"/projects/:projectId\" component={ Project } />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n            component={ TranscriptCorrect }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/paperedits/:papereditId\"\n            component={ PaperEdit }\n          />\n          <Route component={NoMatch} />\n        </Switch>\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"papercutsPlayerProgress\":\"VideoContextProgressBar_papercutsPlayerProgress__3Ob4p\",\"papercutsPlayerProgressBack\":\"VideoContextProgressBar_papercutsPlayerProgressBack__1Wjfn\",\"papercutsPlayerProgressFront\":\"VideoContextProgressBar_papercutsPlayerProgressFront__3ggno\",\"papercutsPlayerProgressTrack\":\"VideoContextProgressBar_papercutsPlayerProgressTrack__5E6Ba\",\"papercutsPlayerProgressTrackBuffer\":\"VideoContextProgressBar_papercutsPlayerProgressTrackBuffer__1yKEJ\"};","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n      //   console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n      //   console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      try {\n        process.chdir(__dirname);\n        // process.chdir('..');\n        // console.log('New directory: ' + process.cwd());\n      }\n      catch (err) {\n        console.log('chdir: ' + err);\n      }\n\n      return 'cep';\n\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n"],"sourceRoot":""}